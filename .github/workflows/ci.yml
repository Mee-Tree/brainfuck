name: Scala CI

on:
  push:
    branches: [ "master" ]
  pull_request:

jobs:
  format:
    name: Code Formatting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: coursier/cache-action@v6
      - uses: VirtusLab/scala-cli-setup@main

      - name: Check formatting
        run: scala-cli format --check .

  test:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: coursier/cache-action@v6
      - uses: VirtusLab/scala-cli-setup@main

      - name: Run unit tests
        run: scala-cli test .

  example:
    name: Integration Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: coursier/cache-action@v6
      - uses: VirtusLab/scala-cli-setup@main

      - name: Run integration tests
        run: |
          declare -A examples=(
            ["helloworld"]='Hello World!'
            ["addition"]='7'
            ['bubblesort:978365412']='123456789'
            ['bubblesort:aZefcYbdX']='XYZabcdef'
            ['rot13:Uryyb, Jbeyq!']='Hello, World!'
            ['rot13:Hello, World!']='Uryyb, Jbeyq!'
          )

          for example in "${!examples[@]}"; do
            name="$example"
            input=""
            expected="${examples[$example]}"

            if [[ $example == *:* ]]; then
              name="${example%%:*}"
              input="${example##*:}"
            fi

            echo "Running examples/$name.b $input"
            .github/test.sh "$name" "$expected" "$input"
          done
